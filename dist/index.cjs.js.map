{"version":3,"file":"index.cjs.js","sources":["../src/utils/removeVideoElement.tsx","../src/modules/WRTC-Stream.ts"],"sourcesContent":["export const removeVideoElement = ({ id }: { id: string | undefined }) => {\n  const videoEl = document.getElementById(`vid_${id}`);\n  videoEl?.remove();\n};\n","// import { Socket } from 'socket.io-client';\nimport { IceConfig } from '../config/iceConfig';\nimport { IPeers, IStreams, ILogs } from '../types/EventsManager.types';\nimport EventEmitter from 'eventemitter3';\nimport { removeVideoElement } from '../utils/removeVideoElement';\nimport { Socket } from 'socket.io-client';\nimport { start } from '../../server.js';\n/**\n * @package WTRC-Stream\n * @param socket {Object} - A Socket is the fundamental class for interacting with the server.\n * @param iceConfig {string} -\n */\nclass StreamService extends EventEmitter {\n\tprivate peers: IPeers = {};\n\tprivate streams: IStreams;\n\tprivate _localStream: MediaStream | undefined;\n\tprivate _myId: string | undefined;\n\tprivate _isAdmin: boolean | undefined;\n\tlog: ILogs['log'];\n\twarn: ILogs['warn'];\n\terror: ILogs['error'];\n\tuser: { name?: string };\n\troom: string | undefined;\n\tsocket: Socket;\n\ticeConfig: IceConfig;\n\tconnectReady: boolean;\n\tisOriginator: boolean;\n\tinCall: boolean;\n\n\tconstructor({\n\t\tsocket,\n\t\ticeConfig,\n\t\tlogging = { log: true, warn: true, error: true }\n\t}: {\n\t\tsocket: Socket;\n\t\ticeConfig: IceConfig;\n\t\tlogging: { log?: boolean; warn?: boolean; error?: boolean };\n\t}) {\n\t\tsuper();\n\t\tthis.log = logging.log ? console.log : () => {};\n\t\tthis.warn = logging.warn ? console.warn : () => {};\n\t\tthis.error = logging.error ? console.error : () => {};\n\t\tthis.socket = socket;\n\t\tthis.iceConfig = iceConfig as IceConfig;\n\t\tthis.streams = {};\n\t\tthis.user = {};\n\t\tthis.isOriginator = false;\n\t\tthis.connectReady = false;\n\t\tthis.inCall = false;\n\t}\n\n\t// get stream ready\n\tasync getMyStream({ name, gridId }: { name: string; gridId: string }) {\n\t\tconst videoGrid = document.getElementById(gridId);\n\n\t\tif (!name) {\n\t\t\tthrow new Error(`Video name in stream options is required.`);\n\t\t}\n\n\t\tif (!gridId) {\n\t\t\tthrow new Error(`Video gridId in stream options is required.`);\n\t\t}\n\n\t\tif (!videoGrid) {\n\t\t\tthrow new Error(`Element with id '${gridId}' is required.`);\n\t\t}\n\n\t\treturn navigator.mediaDevices.getUserMedia({ audio: false, video: true }).then((stream) => {\n\t\t\tthis.log('Media stream ready.');\n\t\t\tthis.user.name = name;\n\t\t\treturn (this._localStream = stream);\n\t\t});\n\t}\n\n\t// initialize listeners\n\tstartListeners() {\n\t\tthis._establishSocketListeners();\n\t}\n\n\t// establish socket listeners\n\tprivate _establishSocketListeners() {\n\t\t// initial connect\n\t\t// if (!this.socket.connected)\n\t\tthis.socket.disconnect();\n\t\tthis.socket.connect();\n\t\t// listen for connection confirmation\n\t\tthis.socket.on('connect', this._socketEvents.connect.bind(this));\n\t\t// logger event\n\t\tthis.socket.on('log', this._socketEvents.log.bind(this));\n\t\t// created room event\n\t\tthis.socket.on('created', this._socketEvents.created.bind(this));\n\t\t// joined room event\n\t\tthis.socket.on('joined', this._socketEvents.joined.bind(this));\n\t\t// join room event\n\t\tthis.socket.on('join', this._socketEvents.join.bind(this));\n\t\t// signal message event\n\t\tthis.socket.on('message', this._socketEvents.message.bind(this));\n\t\t// room ready event\n\t\tthis.socket.on('ready', this._socketEvents.ready.bind(this));\n\t\t// stream ready event\n\t\tthis.socket.on('stream', this._socketEvents.stream.bind(this));\n\t}\n\n\t// socket listener events\n\tprivate _socketEvents = {\n\t\tlog: (event: [message?: any, ...optionalParams: any[]]) => {\n\t\t\tthis.log.apply(console, event);\n\t\t},\n\t\tconnect: () => {\n\t\t\tthis.log('RTC sockets ready.');\n\t\t\treturn this;\n\t\t},\n\t\tcreated: (event: { id: string | undefined; room: string | undefined }) => {\n\t\t\tthis._myId = event.id;\n\t\t\tthis.room = event.room;\n\t\t\tthis.isOriginator = true;\n\t\t\tthis._isAdmin = true;\n\n\t\t\tthis.log('Created room:', { event });\n\t\t\tthis.emit('created', event);\n\t\t},\n\t\tjoined: (event: { id: string | undefined; room: string | undefined; user: any }) => {\n\t\t\tthis._myId = event.id;\n\t\t\tthis.room = event.room;\n\t\t\tthis.connectReady = true;\n\t\t\tthis.log('Joined room:', { event });\n\t\t\tthis.emit('joined', event);\n\t\t},\n\t\tjoin: () => {\n\t\t\tthis.connectReady = true;\n\n\t\t\tthis.emit('newJoin', { newJoin: true });\n\t\t},\n\t\tmessage: (event: {\n\t\t\tid: any;\n\t\t\ttype: string;\n\t\t\tsdp: RTCSessionDescriptionInit;\n\t\t\tcandidate: RTCIceCandidateInit | undefined;\n\t\t}) => {\n\t\t\tconst socketId = event.id;\n\n\t\t\tif (event.type === 'left') {\n\t\t\t\tthis.log(socketId, 'has left the call.', { event });\n\n\t\t\t\tthis._removePeer(socketId);\n\t\t\t\tthis.isOriginator = true;\n\n\t\t\t\tthis.emit('userLeave', { id: socketId });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// prevent duplicate connection attempts\n\t\t\tif (this.peers[socketId] && this.peers[socketId].connectionState === 'connected') {\n\t\t\t\tthis.log('Connection with', socketId, 'is already established', {\n\t\t\t\t\tpeersEstablished: this.peers\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tswitch (event.type) {\n\t\t\t\tcase 'stream-ready':\n\t\t\t\t\tthis._connectPeer(socketId);\n\t\t\t\t\tthis.log('Client -> Incoming stream, creating peer, adding stream, and making offer:', {\n\t\t\t\t\t\tmyId: this._myId,\n\t\t\t\t\t\ttheirId: socketId,\n\t\t\t\t\t\tstreams: this.streams,\n\t\t\t\t\t\tconnections: this.peers\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\tcase 'offer':\n\t\t\t\t\tif (!this.peers[socketId]) {\n\t\t\t\t\t\tthis._connectPeer(socketId);\n\t\t\t\t\t}\n\t\t\t\t\tthis.peers[socketId].setRemoteDescription(new RTCSessionDescription(event.sdp));\n\t\t\t\t\tthis._rtcEvents.makeAnswer(socketId);\n\t\t\t\t\treturn;\n\t\t\t\tcase 'answer':\n\t\t\t\t\tthis.peers[socketId].setRemoteDescription(new RTCSessionDescription(event.sdp));\n\t\t\t\t\treturn;\n\t\t\t\tcase 'candidate':\n\t\t\t\t\tif (!event?.candidate) {\n\t\t\t\t\t\treturn this.error('Client is missing event candidate.');\n\t\t\t\t\t}\n\t\t\t\t\tthis.inCall = true;\n\t\t\t\t\tconst candidate = new RTCIceCandidate(event.candidate);\n\t\t\t\t\tthis.peers[socketId].addIceCandidate(candidate);\n\t\t\t\t\treturn;\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\tready: (event: { id: string | undefined }) => {\n\t\t\tif (event.id !== this._myId) this.isOriginator = true;\n\t\t},\n\t\tstream() {\n\t\t\tconsole.log('TODO socket stream event!');\n\t\t}\n\t};\n\n\tprivate _rtcEvents = {\n\t\tmakeOffer: (socketId: string) => {\n\t\t\tthis.log('Making offer:', { peer: this.peers[socketId] });\n\n\t\t\tthis.peers[socketId]\n\t\t\t\t.createOffer()\n\t\t\t\t.then(this._rtcEvents.sendLocalDescription.bind(this, socketId), this._rtcEvents.createOfferError);\n\t\t},\n\t\tmakeAnswer: (socketId: string) => {\n\t\t\tthis.log('Sending answer:', { peer: this.peers[socketId] });\n\n\t\t\tthis.peers[socketId]\n\t\t\t\t.createAnswer()\n\t\t\t\t.then(this._rtcEvents.sendLocalDescription.bind(this, socketId), this._rtcEvents.sdpError);\n\t\t},\n\t\tsendLocalDescription: async (socketId: string, sessionDescription: any) => {\n\t\t\ttry {\n\t\t\t\tawait this.peers[socketId].setLocalDescription(sessionDescription);\n\t\t\t\tthis._sendMessage({\n\t\t\t\t\ttoId: socketId,\n\t\t\t\t\tname: this.user.name,\n\t\t\t\t\troom: this.room,\n\t\t\t\t\tsdp: sessionDescription,\n\t\t\t\t\ttype: sessionDescription.type\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tif (this.peers[socketId].connectionState !== 'new') {\n\t\t\t\t\tthis.error('Failed to setLocalDescription', {\n\t\t\t\t\t\tstate: this.peers[socketId].connectionState,\n\t\t\t\t\t\tpeer: this.peers[socketId],\n\t\t\t\t\t\tpeers: this.peers\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\taddTrack: (socketId: string, event: { streams: MediaStream[] }) => {\n\t\t\tthis.log('Remote stream added for ', this.peers[socketId]);\n\n\t\t\tif (this.streams[socketId]?.id !== event.streams[0].id) {\n\t\t\t\tthis.streams[socketId] = event.streams[0];\n\n\t\t\t\tthis.emit('stream', {\n\t\t\t\t\tid: socketId,\n\t\t\t\t\tstream: event.streams[0]\n\t\t\t\t});\n\t\t\t\tthis.socket.emit('stream', {\n\t\t\t\t\tid: socketId,\n\t\t\t\t\tstream: event.streams[0]\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tremoveTrack: (socketId: string, event: { streams: MediaStream[] }) => {\n\t\t\tthis.isOriginator = false;\n\t\t\tthis._removePeer(socketId);\n\n\t\t\tthis.emit('left', {\n\t\t\t\tid: socketId,\n\t\t\t\tstream: event.streams[0]\n\t\t\t});\n\t\t},\n\t\ticeCandidate: (socketId: string, event: RTCIceCandidate) => {\n\t\t\tif (event.candidate) {\n\t\t\t\tthis._sendMessage({\n\t\t\t\t\ttoId: socketId,\n\t\t\t\t\tname: this.user.name,\n\t\t\t\t\troom: this.room,\n\t\t\t\t\tcandidate: event.candidate,\n\t\t\t\t\ttype: 'candidate'\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tstateChange: (socketId: string, event: RTCSignalingState) => {\n\t\t\tconst connectionState: RTCPeerConnectionState = this.peers[socketId].connectionState;\n\t\t\tthis.log('RTC state change:', connectionState);\n\t\t\tif (connectionState === 'disconnected' || connectionState === 'failed') {\n\t\t\t\tthis.emit('left', {\n\t\t\t\t\tid: socketId\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tsdpError: (error: RTCError) => {\n\t\t\tthis.log('Session description error: ' + error.toString());\n\n\t\t\tthis.emit('error', {\n\t\t\t\terror: new Error(`Session description error: ${error.toString()}`)\n\t\t\t});\n\t\t},\n\t\tcreateOfferError: () => {\n\t\t\tthis.error('ERROR creating offer');\n\n\t\t\tthis.emit('error', {\n\t\t\t\terror: new Error('Error while creating an offer')\n\t\t\t});\n\t\t}\n\t};\n\n\tprivate async _createPeer(socketId: string) {\n\t\ttry {\n\t\t\tif (this.peers[socketId]) {\n\t\t\t\t// do not create peer if connection is already established\n\t\t\t\tthis.warn(\"You're already connected with:\", socketId);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.peers[socketId] = new RTCPeerConnection(this.iceConfig as RTCConfiguration);\n\t\t\tthis.peers[socketId].onicecandidate = this._rtcEvents.iceCandidate.bind(this, socketId);\n\t\t\tthis.peers[socketId].ontrack = this._rtcEvents.addTrack.bind(this, socketId);\n\t\t\tthis.peers[socketId].onremovetrack = this._rtcEvents.removeTrack.bind(this, socketId);\n\t\t\tthis.peers[socketId].onconnectionstatechange = this._rtcEvents.stateChange.bind(this, socketId);\n\n\t\t\tthis.log('Created RTC Peer for:', { socketId, peers: this.peers });\n\t\t} catch (error: any) {\n\t\t\tthis.error('RTC Peer failed: ' + error.message);\n\n\t\t\tthis.emit('error', {\n\t\t\t\terror: new Error(`RTC Peer failed: ${error.message}`)\n\t\t\t});\n\t\t}\n\t}\n\n\t// connect rtc peer connection\n\tprivate _connectPeer(socketId: string) {\n\t\tif (this._localStream === undefined && !this.connectReady) {\n\t\t\treturn this.warn('This remote peer is not ready for connection.', {\n\t\t\t\tready: this.connectReady,\n\t\t\t\tlocalStream: this._localStream,\n\t\t\t\tid: socketId\n\t\t\t});\n\t\t}\n\n\t\tthis._createPeer(socketId);\n\t\tthis.peers[socketId].addStream(this._localStream);\n\n\t\tif (this.isOriginator) {\n\t\t\tthis.log('FYI - You initiated this call.');\n\t\t\tthis.log('Creating offer for:', socketId);\n\n\t\t\tthis._rtcEvents.makeOffer(socketId);\n\t\t} else {\n\t\t\tthis.log('FYI - You received this call.');\n\t\t}\n\t}\n\n\tprivate _removePeer(socketId: string) {\n\t\tif (!socketId) {\n\t\t\tthis.peers.forEach((peer: any, index: number) => {\n\t\t\t\tthis.log('Closing peer connection:', { id: socketId, peer });\n\t\t\t\tpeer.close();\n\t\t\t\tdelete this.peers[index];\n\t\t\t});\n\t\t\tthis.streams = {};\n\t\t} else {\n\t\t\tif (!this.peers[socketId]) return;\n\t\t\tthis.peers[socketId].close();\n\t\t\tdelete this.peers[socketId];\n\t\t\tdelete this.streams[socketId];\n\t\t}\n\n\t\tthis.emit('left', { id: socketId });\n\t}\n\n\t// server event emitter\n\tprivate _sendMessage(event: any) {\n\t\tsetTimeout(() => {\n\t\t\tthis.socket.emit('message', { ...event, id: event.id });\n\t\t}, 0);\n\t}\n\n\t// public method: join room\n\tjoinRoom(name: string, room: string) {\n\t\tif (this.room) {\n\t\t\treturn this.warn('You are currently in a room.');\n\t\t}\n\n\t\tif (!room) {\n\t\t\treturn this.error('Room name was not provided to join.');\n\t\t}\n\n\t\t// create room\n\t\tthis.user.name = name;\n\t\tthis.log('create or join', { name: this.user.name, room });\n\t\tthis.socket.emit('create or join', {\n\t\t\tuser: this.user,\n\t\t\tname: this.user.name,\n\t\t\troom\n\t\t});\n\t}\n\n\t// public method: leave room\n\tleaveRoom(room: string) {\n\t\t// leave room\n\t\tthis.log('leaving room', { name: this.user.name, room });\n\n\t\tthis.isOriginator = false;\n\t\tthis._sendMessage({ type: 'left', user: this.user });\n\t}\n\n\t// public method: sends message to server\n\t// broadcasting stream is ready\n\tsendStreamReady() {\n\t\tif (this.room) {\n\t\t\tthis._sendMessage({ type: 'stream-ready', room: this.room });\n\t\t} else {\n\t\t\tthis.warn('You need to join a room before streaming.');\n\t\t}\n\t}\n\n\tstopListeners() {\n\t\tthis.removeAllListeners();\n\t\tthis.socket.removeAllListeners();\n\t\tif (this._myId) {\n\t\t\tthis.peers[this._myId as string]?.close();\n\t\t\tthis._localStream?.getTracks().forEach((track) => track.stop());\n\t\t\tremoveVideoElement({ id: this._myId });\n\t\t\tthis.log('Destroyed RTC session.');\n\t\t}\n\t}\n}\n\nexport default StreamService;\n\n// export const startServer = start;\n"],"names":["removeVideoElement","id","StreamService","EventEmitter","socket","iceConfig","logging","event","socketId","candidate","sessionDescription","connectionState","error","name","gridId","videoGrid","stream","peer","index","room","track"],"mappings":"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"}